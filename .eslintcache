[{"/Users/varun/website2020/todolist-frontend/src/index.tsx":"1","/Users/varun/website2020/todolist-frontend/src/reportWebVitals.ts":"2","/Users/varun/website2020/todolist-frontend/src/App.tsx":"3","/Users/varun/website2020/todolist-frontend/src/theme.ts":"4","/Users/varun/website2020/todolist-frontend/src/store.ts":"5","/Users/varun/website2020/todolist-frontend/src/slices/index.ts":"6","/Users/varun/website2020/todolist-frontend/src/utils/setAuthToken.ts":"7","/Users/varun/website2020/todolist-frontend/src/slices/authSlice.ts":"8","/Users/varun/website2020/todolist-frontend/src/slices/alertSlice.ts":"9","/Users/varun/website2020/todolist-frontend/src/api/api.ts":"10","/Users/varun/website2020/todolist-frontend/src/api/authRequests.ts":"11","/Users/varun/website2020/todolist-frontend/src/constants/routes.ts":"12","/Users/varun/website2020/todolist-frontend/src/components/Alert.tsx":"13","/Users/varun/website2020/todolist-frontend/src/views/auth/Login/Login.tsx":"14","/Users/varun/website2020/todolist-frontend/src/views/auth/Register/Register.tsx":"15","/Users/varun/website2020/todolist-frontend/src/assets/jss/Alerts.tsx":"16","/Users/varun/website2020/todolist-frontend/src/components/FormContainer.tsx":"17","/Users/varun/website2020/todolist-frontend/src/assets/jss/FormContainer.tsx":"18","/Users/varun/website2020/todolist-frontend/src/views/auth/Register/EnhancedRegisterForm.tsx":"19","/Users/varun/website2020/todolist-frontend/src/views/auth/Register/RegisterForm.tsx":"20","/Users/varun/website2020/todolist-frontend/src/constants/messages/formMessages.ts":"21","/Users/varun/website2020/todolist-frontend/src/views/auth/Login/LoginForm.tsx":"22","/Users/varun/website2020/todolist-frontend/src/views/auth/Login/EnhancedLoginForm.tsx":"23","/Users/varun/website2020/todolist-frontend/src/views/auth/MainForm.tsx":"24","/Users/varun/website2020/todolist-frontend/src/components/PrivateRoute.tsx":"25","/Users/varun/website2020/todolist-frontend/src/views/Todos/Todos.tsx":"26","/Users/varun/website2020/todolist-frontend/src/components/Loader/Loader.tsx":"27","/Users/varun/website2020/todolist-frontend/src/views/Todos/BasicCreateTodo/EnhancedBasicCreateTodoForm.tsx":"28","/Users/varun/website2020/todolist-frontend/src/views/Todos/BasicCreateTodo/BasicCreateTodoForm.tsx":"29","/Users/varun/website2020/todolist-frontend/src/slices/todoSlice.ts":"30","/Users/varun/website2020/todolist-frontend/src/api/todoRequests.ts":"31","/Users/varun/website2020/todolist-frontend/src/views/Todos/CreateOrUpdateTodo/CreateOrUpdateTodo.tsx":"32","/Users/varun/website2020/todolist-frontend/src/views/Todos/CreateOrUpdateTodo/EnhancedCreateOrUpdateTodoForm.tsx":"33","/Users/varun/website2020/todolist-frontend/src/views/Todos/CreateOrUpdateTodo/CreateOrUpdateTodoForm.tsx":"34"},{"size":500,"mtime":1608550335387,"results":"35","hashOfConfig":"36"},{"size":425,"mtime":1608550335391,"results":"37","hashOfConfig":"36"},{"size":1835,"mtime":1608738080600,"results":"38","hashOfConfig":"36"},{"size":373,"mtime":1608645669004,"results":"39","hashOfConfig":"36"},{"size":1091,"mtime":1608648277781,"results":"40","hashOfConfig":"36"},{"size":354,"mtime":1608734630779,"results":"41","hashOfConfig":"36"},{"size":423,"mtime":1608554998079,"results":"42","hashOfConfig":"36"},{"size":5194,"mtime":1608740824695,"results":"43","hashOfConfig":"36"},{"size":782,"mtime":1608553586634,"results":"44","hashOfConfig":"36"},{"size":295,"mtime":1608740047176,"results":"45","hashOfConfig":"36"},{"size":1576,"mtime":1608552674417,"results":"46","hashOfConfig":"36"},{"size":353,"mtime":1608651985929,"results":"47","hashOfConfig":"36"},{"size":1062,"mtime":1608559439855,"results":"48","hashOfConfig":"36"},{"size":261,"mtime":1608646632890,"results":"49","hashOfConfig":"36"},{"size":239,"mtime":1608653133229,"results":"50","hashOfConfig":"36"},{"size":148,"mtime":1608559439854,"results":"51","hashOfConfig":"36"},{"size":1164,"mtime":1608733107110,"results":"52","hashOfConfig":"36"},{"size":386,"mtime":1608569336567,"results":"53","hashOfConfig":"36"},{"size":2034,"mtime":1608653452232,"results":"54","hashOfConfig":"36"},{"size":6633,"mtime":1608653035146,"results":"55","hashOfConfig":"36"},{"size":1050,"mtime":1608559439860,"results":"56","hashOfConfig":"36"},{"size":3627,"mtime":1608655100113,"results":"57","hashOfConfig":"36"},{"size":1253,"mtime":1608655176223,"results":"58","hashOfConfig":"36"},{"size":3042,"mtime":1608732383167,"results":"59","hashOfConfig":"36"},{"size":883,"mtime":1608732983558,"results":"60","hashOfConfig":"36"},{"size":4723,"mtime":1608738336790,"results":"61","hashOfConfig":"36"},{"size":939,"mtime":1608555873245,"results":"62","hashOfConfig":"36"},{"size":1838,"mtime":1608735222666,"results":"63","hashOfConfig":"36"},{"size":2416,"mtime":1608734724575,"results":"64","hashOfConfig":"36"},{"size":3362,"mtime":1608742580225,"results":"65","hashOfConfig":"36"},{"size":875,"mtime":1608558005616,"results":"66","hashOfConfig":"36"},{"size":1639,"mtime":1608740787919,"results":"67","hashOfConfig":"36"},{"size":2952,"mtime":1608742810192,"results":"68","hashOfConfig":"36"},{"size":5428,"mtime":1608742901724,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1vk93wx",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/varun/website2020/todolist-frontend/src/index.tsx",[],["155","156"],"/Users/varun/website2020/todolist-frontend/src/reportWebVitals.ts",[],"/Users/varun/website2020/todolist-frontend/src/App.tsx",["157","158","159","160","161","162","163","164","165","166"],"import React, { useEffect } from 'react';\nimport logo from './logo.svg';\nimport { MuiThemeProvider as ThemeProvider } from '@material-ui/core';\nimport { MuiTheme } from './theme';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport './App.css';\nimport store from './store';\nimport { loadUser } from './slices/authSlice';\nimport setAuthToken from './utils/setAuthToken';\nimport { Alert } from '@material-ui/lab';\nimport MyAlert from './components/Alert';\nimport { DASHBOARD, HOME, REGISTER, UPDATE_TODO } from './constants/routes';\nimport { Login } from './views/auth/Login/Login';\nimport { Register } from './views/auth/Register/Register';\nimport { ThunkDispatch } from 'redux-thunk';\nimport { AnyAction } from 'redux';\nimport MainForm from './views/auth/MainForm';\nimport PrivateRoute from './components/PrivateRoute';\nimport { Todos } from './views/Todos/Todos';\nimport { CreateOrUpdateTodo } from './views/Todos/CreateOrUpdateTodo/CreateOrUpdateTodo';\n\nconst App = () => {\n  // useEffect(() => {\n  //   (async () => {\n  //     if (localStorage.token) {\n  //       await setAuthToken(localStorage.token);\n  //       store.dispatch(loadUser());\n  //     }\n  //   })();\n  // }, []);\n\n  return (\n    <Provider store={store}>\n      <ThemeProvider theme={MuiTheme}>\n        <Router>\n          <MyAlert />\n          {/* Add Suspense */}\n          <Switch>\n            <Route exact path={HOME}>\n              <MainForm />\n            </Route>\n\n            <PrivateRoute exact path={DASHBOARD}>\n              <Todos />\n            </PrivateRoute>\n            <PrivateRoute exact path={UPDATE_TODO}>\n              <CreateOrUpdateTodo />\n            </PrivateRoute>\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\nexport default App;\n","/Users/varun/website2020/todolist-frontend/src/theme.ts",[],"/Users/varun/website2020/todolist-frontend/src/store.ts",[],"/Users/varun/website2020/todolist-frontend/src/slices/index.ts",[],"/Users/varun/website2020/todolist-frontend/src/utils/setAuthToken.ts",[],"/Users/varun/website2020/todolist-frontend/src/slices/authSlice.ts",["167","168"],"/Users/varun/website2020/todolist-frontend/src/slices/alertSlice.ts",["169"],"import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\n\nconst initialState = <any>[];\n\nconst alertSlice = createSlice({\n  name: 'alert',\n  initialState,\n  reducers: {\n    setAlertInReducer(state, action) {\n      return [...state, action.payload];\n    },\n    removeAlertInReducer(state, action) {\n      return state.filter((alert: any) => alert.id !== action.payload);\n    },\n  },\n});\n\nexport const { setAlertInReducer, removeAlertInReducer } = alertSlice.actions;\n\nexport default alertSlice.reducer;\n\n// Thunk\nexport const setAlert = (msg: string, alertType: string) => async (\n  dispatch: any\n) => {\n  const id = uuid();\n  dispatch(setAlertInReducer({ msg, alertType, id }));\n\n  setTimeout(() => {\n    dispatch(removeAlertInReducer(id));\n  }, 4000);\n};\n","/Users/varun/website2020/todolist-frontend/src/api/api.ts",[],"/Users/varun/website2020/todolist-frontend/src/api/authRequests.ts",[],"/Users/varun/website2020/todolist-frontend/src/constants/routes.ts",[],"/Users/varun/website2020/todolist-frontend/src/components/Alert.tsx",["170"],"import React from 'react';\nimport { useSelector, shallowEqual, RootStateOrAny } from 'react-redux';\nimport { Snackbar, makeStyles, Slide } from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport AlertStyles from '../assets/jss/Alerts';\n\nconst useStyles = makeStyles(AlertStyles);\n\ninterface AlertProps {}\n\nconst MyAlert: React.FC<AlertProps> = ({}) => {\n  const { alerts } = useSelector((state: RootStateOrAny) => {\n    return {\n      alerts: state.alert,\n    };\n  }, shallowEqual);\n\n  const classes = useStyles();\n\n  return (\n    alerts !== null &&\n    alerts.length > 0 &&\n    alerts.map((alert: any) => (\n      <Snackbar\n        key={alert.id}\n        className={classes.root}\n        TransitionComponent={Slide}\n        open={alert.msg.length > 0 ? true : false}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <Alert style={{ width: '100%' }} severity={alert.alertType}>\n          <AlertTitle>{alert.msg}</AlertTitle>\n        </Alert>\n      </Snackbar>\n    ))\n  );\n};\n\nexport default MyAlert;\n","/Users/varun/website2020/todolist-frontend/src/views/auth/Login/Login.tsx",["171","172"],"import React from 'react';\nimport { FormContainer } from '../../../components/FormContainer';\nimport EnhancedLoginForm from './EnhancedLoginForm';\n\ninterface LoginProps {}\n\nexport const Login: React.FC<LoginProps> = ({}) => {\n  return <EnhancedLoginForm />;\n};\n","/Users/varun/website2020/todolist-frontend/src/views/auth/Register/Register.tsx",["173"],"import React from 'react';\nimport EnhancedRegisterForm from './EnhancedRegisterForm';\n\ninterface RegisterProps {}\n\nexport const Register: React.FC<RegisterProps> = ({}) => {\n  return (\n    <>\n      <EnhancedRegisterForm />\n    </>\n  );\n};\n","/Users/varun/website2020/todolist-frontend/src/assets/jss/Alerts.tsx",[],"/Users/varun/website2020/todolist-frontend/src/components/FormContainer.tsx",["174"],"import React, { Fragment, ReactChild } from 'react';\nimport { Grid, Container, Paper, makeStyles } from '@material-ui/core';\nimport formContainerStyles from '../assets/jss/FormContainer';\n\nconst useStyles = makeStyles(formContainerStyles);\n\ninterface FormContainerProps {\n  children: React.ReactNode;\n  color?: string;\n  marginTop?: number;\n}\n\nexport const FormContainer: React.FC<FormContainerProps> = ({\n  children,\n  color,\n  marginTop,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div style={{ marginTop: marginTop }}>\n      <Container>\n        <Grid container direction='row' justify='center' alignItems='center'>\n          <Grid item md={6} className={classes.grid}>\n            <Fragment>\n              <Container maxWidth='sm'>\n                <Paper\n                  style={{ backgroundColor: color ? color : 'white' }}\n                  className={classes.paper}\n                  elevation={3}\n                >\n                  {children}\n                </Paper>\n              </Container>\n            </Fragment>\n          </Grid>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nFormContainer.defaultProps = {\n  marginTop: 80,\n};\n","/Users/varun/website2020/todolist-frontend/src/assets/jss/FormContainer.tsx",[],"/Users/varun/website2020/todolist-frontend/src/views/auth/Register/EnhancedRegisterForm.tsx",["175","176"],"import { FormikValues, withFormik } from 'formik';\nimport { connect } from 'react-redux';\nimport { register } from '../../../slices/authSlice';\nimport { RegisterForm } from './RegisterForm';\nimport * as Yup from 'yup';\n\n//constants\nimport {\n  EMAIL_INVALID_ERROR,\n  EMAIL_NOT_LONG_ERROR,\n  EMAIL_REQUIRED,\n  PASSWORD_REQUIRED,\n  PASSWORD_SHORT_ERROR,\n  CONFIRM_PASSWORD_REQUIRED,\n  NAME_REQUIRED,\n  PASSWORDS_MATCH_ERROR,\n} from '../../../constants/messages/formMessages';\nimport { AppThunk } from '../../../store';\ninterface IDispatchProps {\n  register: (formData: any) => AppThunk;\n}\ninterface EnhancedRegisterFormProps {\n  register: (formData: any) => void;\n}\nexport interface EnhancedRegisterFormValues {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst EnhancedRegistrationForm = withFormik<\n  EnhancedRegisterFormProps,\n  EnhancedRegisterFormValues\n>({\n  mapPropsToValues: () => ({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  }),\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required('First name is required!'),\n    lastName: Yup.string().required('Last name is required!'),\n    email: Yup.string()\n      .min(3, EMAIL_NOT_LONG_ERROR)\n      .max(255)\n      .email(EMAIL_INVALID_ERROR)\n      .required(EMAIL_REQUIRED),\n\n    password: Yup.string()\n      .required(PASSWORD_REQUIRED)\n      .min(6, PASSWORD_SHORT_ERROR),\n\n    confirmPassword: Yup.string()\n      .required(CONFIRM_PASSWORD_REQUIRED)\n      .min(6, PASSWORD_SHORT_ERROR)\n      .oneOf([Yup.ref('password')], PASSWORDS_MATCH_ERROR),\n  }),\n  handleSubmit: (values, { setSubmitting, props }) => {\n    const { register } = props;\n    register({\n      name: values.firstName + ' ' + values.lastName,\n      ...values,\n    });\n    // console.log(values);\n\n    setSubmitting(false);\n  },\n  displayName: 'RegisterForm',\n})(RegisterForm);\n\nexport default connect<null, IDispatchProps>(null, { register })(\n  EnhancedRegistrationForm\n);\n","/Users/varun/website2020/todolist-frontend/src/views/auth/Register/RegisterForm.tsx",["177","178"],"import { FormikProps } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { EnhancedRegisterFormValues } from './EnhancedRegisterForm';\nimport {\n  FormControl,\n  makeStyles,\n  TextField,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport {\n  Visibility as VisibilityIcon,\n  VisibilityOff as VisibilityOffIcon,\n} from '@material-ui/icons';\n\nconst styles = (theme: any) => ({\n  multilineColor: {\n    color: 'white',\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\ninterface RegisterFormProps {}\n\nexport const RegisterForm: React.FC<\n  RegisterFormProps & FormikProps<EnhancedRegisterFormValues>\n> = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const debug = false;\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    handleBlur,\n    handleChange,\n  } = props;\n  const [view, setView] = useState(false);\n\n  const [view2, setView2] = useState(false);\n\n  return (\n    <>\n      <div style={{ textAlign: 'center', color: 'white', marginBottom: 12 }}>\n        <h2>Sign Up</h2>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <FormControl\n            style={{\n              // marginLeft: '0.5rem',\n              marginRight: '0.5rem',\n            }}\n          >\n            <TextField\n              color='secondary'\n              variant='outlined'\n              label='First Name*'\n              placeholder='First Name*'\n              InputProps={{\n                className: classes.multilineColor,\n              }}\n              name='firstName'\n              value={values.firstName}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={(errors.firstName && touched.firstName) || false}\n              helperText={\n                errors.firstName && touched.firstName && errors.firstName\n              }\n            />\n          </FormControl>\n          <FormControl\n            style={{\n              marginLeft: '0.5rem',\n              // marginRight: '0.5rem'\n            }}\n          >\n            <TextField\n              color='secondary'\n              variant='outlined'\n              label='Last Name*'\n              placeholder='Last Name*'\n              InputProps={{\n                className: classes.multilineColor,\n              }}\n              name='lastName'\n              value={values.lastName}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={(errors.lastName && touched.lastName) || false}\n              helperText={\n                errors.lastName && touched.lastName && errors.lastName\n              }\n            />\n          </FormControl>\n        </div>\n        <FormControl\n          style={{\n            // marginLeft: '0.5rem',\n            // marginRight: '0.5rem',\n            width: '100%',\n            marginTop: '1rem',\n            marginBottom: '1rem',\n          }}\n        >\n          <TextField\n            color='secondary'\n            variant='outlined'\n            label='Email*'\n            placeholder='Email*'\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n            name='email'\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={(errors.email && touched.email) || false}\n            helperText={errors.email && touched.email && errors.email}\n          />\n        </FormControl>\n        <FormControl\n          style={{\n            // marginLeft: '0.5rem',\n            // marginRight: '0.5rem',\n            // marginTop: '1rem',\n            marginBottom: '1rem',\n            width: '100%',\n          }}\n        >\n          <TextField\n            color='secondary'\n            variant='outlined'\n            label='Password*'\n            placeholder='Password*'\n            name='password'\n            type={view ? 'text' : 'password'}\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={(errors.password && touched.password) || false}\n            helperText={errors.password && touched.password && errors.password}\n            InputProps={{\n              className: classes.multilineColor,\n              endAdornment: (\n                <InputAdornment position='end'>\n                  {!view ? (\n                    <VisibilityIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView(!view)}\n                    />\n                  ) : (\n                    <VisibilityOffIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView(!view)}\n                    />\n                  )}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </FormControl>\n        <FormControl\n          style={{\n            // marginLeft: '0.5rem',\n            // marginRight: '0.5rem',\n            // marginTop: '1rem',\n            marginBottom: '1rem',\n            width: '100%',\n          }}\n        >\n          <TextField\n            color='secondary'\n            variant='outlined'\n            label='Confirm Password*'\n            placeholder='Confirm Password*'\n            name='confirmPassword'\n            type={view2 ? 'text' : 'password'}\n            value={values.confirmPassword}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={(errors.confirmPassword && touched.confirmPassword) || false}\n            helperText={\n              errors.confirmPassword &&\n              touched.confirmPassword &&\n              errors.confirmPassword\n            }\n            InputProps={{\n              className: classes.multilineColor,\n              endAdornment: (\n                <InputAdornment position='end'>\n                  {!view2 ? (\n                    <VisibilityIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView2(!view2)}\n                    />\n                  ) : (\n                    <VisibilityOffIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView2(!view2)}\n                    />\n                  )}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </FormControl>\n        <Button\n          fullWidth\n          style={{ color: 'white', fontSize: 20 }}\n          type='submit'\n          color='secondary'\n          variant='contained'\n        >\n          Get Started\n        </Button>\n      </form>\n    </>\n  );\n};\n","/Users/varun/website2020/todolist-frontend/src/constants/messages/formMessages.ts",[],"/Users/varun/website2020/todolist-frontend/src/views/auth/Login/LoginForm.tsx",["179","180"],"import { FormikProps } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector, RootStateOrAny } from 'react-redux';\nimport { EnhancedLoginFormValues } from './EnhancedLoginForm';\nimport {\n  FormControl,\n  makeStyles,\n  TextField,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport {\n  Visibility as VisibilityIcon,\n  VisibilityOff as VisibilityOffIcon,\n} from '@material-ui/icons';\n\nconst styles = (theme: any) => ({\n  multilineColor: {\n    color: 'white',\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\ninterface LoginFormProps {}\n\nexport const LoginForm: React.FC<\n  LoginFormProps & FormikProps<EnhancedLoginFormValues>\n> = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const debug = false;\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    handleBlur,\n    handleChange,\n  } = props;\n  const [view, setView] = useState(false);\n  const {\n    auth: { loading },\n  } = useSelector((state: RootStateOrAny) => {\n    return {\n      auth: state.auth,\n    };\n  });\n\n  return (\n    <>\n      <div style={{ textAlign: 'center', color: 'white', marginBottom: 12 }}>\n        <h2>Login</h2>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <FormControl\n          style={{\n            // marginLeft: '0.5rem',\n            // marginRight: '0.5rem',\n            width: '100%',\n            marginTop: '1rem',\n            marginBottom: '1rem',\n          }}\n        >\n          <TextField\n            color='secondary'\n            variant='outlined'\n            label='Email*'\n            placeholder='Email*'\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n            name='email'\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={(errors.email && touched.email) || false}\n            helperText={errors.email && touched.email && errors.email}\n          />\n        </FormControl>\n        <FormControl\n          style={{\n            // marginLeft: '0.5rem',\n            // marginRight: '0.5rem',\n            // marginTop: '1rem',\n            marginBottom: '1rem',\n            width: '100%',\n          }}\n        >\n          <TextField\n            color='secondary'\n            variant='outlined'\n            label='Password*'\n            placeholder='Password*'\n            name='password'\n            type={view ? 'text' : 'password'}\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={(errors.password && touched.password) || false}\n            helperText={errors.password && touched.password && errors.password}\n            InputProps={{\n              className: classes.multilineColor,\n              endAdornment: (\n                <InputAdornment position='end'>\n                  {!view ? (\n                    <VisibilityIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView(!view)}\n                    />\n                  ) : (\n                    <VisibilityOffIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView(!view)}\n                    />\n                  )}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </FormControl>\n\n        <Button\n          fullWidth\n          style={{ color: 'white', fontSize: 20 }}\n          type='submit'\n          color='secondary'\n          variant='contained'\n        >\n          {loading ? 'Loading...' : 'Login'}\n        </Button>\n      </form>\n    </>\n  );\n};\n","/Users/varun/website2020/todolist-frontend/src/views/auth/Login/EnhancedLoginForm.tsx",["181"],"import { FormikValues, withFormik } from 'formik';\nimport { connect } from 'react-redux';\nimport { login } from '../../../slices/authSlice';\nimport { LoginForm } from './LoginForm';\nimport * as Yup from 'yup';\n\n//constants\nimport {\n  PASSWORD_REQUIRED,\n  PASSWORD_SHORT_ERROR,\n} from '../../../constants/messages/formMessages';\nimport { AppThunk } from '../../../store';\n\ninterface IDispatchProps {\n  login: (formData: any) => AppThunk;\n}\ninterface EnhancedLoginFormProps {\n  login: (formDate: any) => void;\n}\nexport interface EnhancedLoginFormValues {\n  email: string;\n  password: string;\n}\n\nconst EnhancedLoginForm = withFormik<\n  EnhancedLoginFormProps,\n  EnhancedLoginFormValues\n>({\n  mapPropsToValues: () => ({\n    email: '',\n    password: '',\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required('Email is required!'),\n\n    password: Yup.string()\n      .required(PASSWORD_REQUIRED)\n      .min(6, PASSWORD_SHORT_ERROR),\n  }),\n  handleSubmit: (values, { setSubmitting, props }) => {\n    const { login } = props;\n\n    login(values);\n\n    // console.log(values);\n    setSubmitting(false);\n  },\n  displayName: 'LoginForm',\n})(LoginForm);\n\nexport default connect<null, IDispatchProps>(null, { login })(\n  EnhancedLoginForm\n);\n","/Users/varun/website2020/todolist-frontend/src/views/auth/MainForm.tsx",["182","183","184"],"import React, { useEffect } from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { Register } from './Register/Register';\nimport { Login } from './Login/Login';\nimport { FormContainer } from '../../components/FormContainer';\nimport { shallowEqual, useSelector, RootStateOrAny } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { DASHBOARD } from '../../constants/routes';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n}\n\nconst TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </div>\n  );\n};\n\nconst a11yProps = (index: any, width: number) => {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n    style: {\n      backgroundColor: '#4EB189',\n      // margin: 15,\n      width: width,\n    },\n  };\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst MainForm = () => {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(1);\n\n  const [width, setWidth] = React.useState(window.innerWidth);\n\n  React.useEffect(() => {\n    const handleWindowResize = () => setWidth(window.innerWidth);\n    window.addEventListener('resize', handleWindowResize);\n    return () => window.removeEventListener('resize', handleWindowResize);\n  }, []);\n\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n  const {\n    auth: { isAuthenticated },\n  } = useSelector((state: RootStateOrAny) => {\n    return {\n      auth: state.auth,\n    };\n  }, shallowEqual);\n  const history = useHistory();\n  useEffect(() => {\n    if (isAuthenticated) {\n      history.push(DASHBOARD);\n    }\n  }, [isAuthenticated]);\n\n  return (\n    <FormContainer color='#24323B'>\n      <AppBar position='sticky' elevation={0}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          aria-label='simple tabs example'\n          style={{ justifyContent: 'space-between' }}\n        >\n          <Tab\n            label='Sign Up'\n            {...a11yProps(0, width > 600 ? 220 : width / 2.5)}\n          />\n          <Tab\n            label='Login'\n            {...a11yProps(1, width > 600 ? 220 : width / 2.5)}\n          />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <Register />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <Login />\n      </TabPanel>\n    </FormContainer>\n  );\n};\n\nexport default MainForm;\n","/Users/varun/website2020/todolist-frontend/src/components/PrivateRoute.tsx",["185"],"import React, { ReactChild } from 'react';\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\nimport { useSelector, shallowEqual, RootStateOrAny } from 'react-redux';\nimport { HOME } from '../constants/routes';\nimport Loader from './Loader/Loader';\n\ninterface PrivateRouteProps {\n  children: ReactChild;\n  exact?: boolean;\n  path?: string;\n}\n\nexport const PrivateRoute: React.FC<PrivateRouteProps> = ({\n  children,\n  ...rest\n}) => {\n  const {\n    auth: { isAuthenticated, loading, user },\n  } = useSelector((state: RootStateOrAny) => {\n    return {\n      auth: state.auth,\n    };\n  }, shallowEqual);\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isAuthenticated && !loading ? (\n          <Redirect to={HOME} />\n        ) : (\n          <>{user === null ? <Loader /> : children}</>\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","/Users/varun/website2020/todolist-frontend/src/views/Todos/Todos.tsx",["186","187","188","189"],"import React, { useEffect } from 'react';\nimport {\n  RootStateOrAny,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n} from 'react-redux';\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  Paper,\n  Button,\n  IconButton,\n} from '@material-ui/core';\nimport { FormContainer } from '../../components/FormContainer';\nimport Loader from '../../components/Loader/Loader';\nimport {\n  getAllTodos,\n  updateTodo,\n  deleteTodo,\n  getTodo,\n} from '../../slices/todoSlice';\nimport EnhancedBasicCreateTodoForm from './BasicCreateTodo/EnhancedBasicCreateTodoForm';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { useHistory } from 'react-router-dom';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport { DASHBOARD } from '../../constants/routes';\ninterface TodosProps {}\n\nexport const Todos: React.FC<TodosProps> = ({}) => {\n  const {\n    todo: { createdTodo, updatedTodo, deletedTodo, todos },\n  } = useSelector((state: RootStateOrAny) => {\n    return {\n      todo: state.todo,\n    };\n  }, shallowEqual);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  useEffect(() => {\n    dispatch(getAllTodos());\n  }, []);\n  useEffect(() => {\n    dispatch(getAllTodos());\n  }, [createdTodo, updatedTodo, deletedTodo]);\n  if (todos === null) return <Loader />;\n  return (\n    <>\n      <FormContainer marginTop={20}>\n        <EnhancedBasicCreateTodoForm />\n      </FormContainer>\n      <FormContainer marginTop={-65} color='#F4F4F4'>\n        <List style={{ height: 300, overflow: 'scroll' }}>\n          {todos.map((todo: any) => {\n            return (\n              <Paper\n                key={todo._id}\n                style={{\n                  padding: '0.5rem',\n                  backgroundColor: todo.isCompleted ? '#C8E7F7' : 'white',\n                  marginBottom: '0.5rem',\n                  cursor: 'pointer',\n                }}\n              >\n                <ListItem style={{ width: '100%' }}>\n                  <ListItemText\n                    onClick={() => {\n                      dispatch(getTodo(todo._id));\n                      history.push(`${DASHBOARD}/${todo._id}/update`);\n                    }}\n                    primary={\n                      <span\n                        style={{\n                          textDecoration: todo.isCompleted\n                            ? 'line-through'\n                            : '',\n                          fontSize: '0.8rem',\n                        }}\n                      >\n                        {todo.task}\n                      </span>\n                    }\n\n                    // secondary={todo.description.slice(0, 100) + '...'}\n                  />\n                  <ListItemSecondaryAction\n                    style={{\n                      justifyContent: 'flex-end',\n                      alignItems: 'flex-end',\n                    }}\n                  >\n                    <IconButton\n                      onClick={() =>\n                        dispatch(\n                          updateTodo(\n                            todo._id,\n                            {\n                              ...todo,\n                              isImportant: !todo.isImportant,\n                            },\n                            history\n                          )\n                        )\n                      }\n                    >\n                      {!todo.isImportant ? (\n                        <StarBorderIcon style={{ color: 'yellow' }} />\n                      ) : (\n                        <StarIcon style={{ color: 'yellow' }} />\n                      )}\n                    </IconButton>\n                    <Button\n                      variant='contained'\n                      onClick={() =>\n                        dispatch(\n                          updateTodo(\n                            todo._id,\n                            {\n                              ...todo,\n                              isCompleted: true,\n                              dateOfCompletion: Date.now(),\n                            },\n                            history\n                          )\n                        )\n                      }\n                      disabled={todo.isCompleted}\n                    >\n                      {' '}\n                      Complete\n                    </Button>\n                    <IconButton onClick={() => dispatch(deleteTodo(todo._id))}>\n                      <ClearIcon />\n                    </IconButton>\n                  </ListItemSecondaryAction>\n                </ListItem>\n              </Paper>\n            );\n          })}\n        </List>\n      </FormContainer>\n    </>\n  );\n};\n","/Users/varun/website2020/todolist-frontend/src/components/Loader/Loader.tsx",["190"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Backdrop } from '@material-ui/core';\nimport './Loader.css';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\ninterface LoaderProps {}\n\nexport const Loader: React.FC<LoaderProps> = ({}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n        }}\n      >\n        <div className='spinner'>\n          <div className='cube1'></div>\n          <div className='cube2'></div>\n        </div>\n      </div>\n    </Backdrop>\n  );\n};\n\nLoader.propTypes = {};\n\nexport default Loader;\n","/Users/varun/website2020/todolist-frontend/src/views/Todos/BasicCreateTodo/EnhancedBasicCreateTodoForm.tsx",["191","192","193","194","195"],"import { FormikValues, withFormik } from 'formik';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { createTodo, updateTodo } from '../../../slices/todoSlice';\nimport { BasicCreateTodoForm } from './BasicCreateTodoForm';\nimport * as Yup from 'yup';\n\n//constants\nimport {\n  PASSWORD_REQUIRED,\n  PASSWORD_SHORT_ERROR,\n} from '../../../constants/messages/formMessages';\nimport { AppThunk } from '../../../store';\n\ninterface IDispatchProps {\n  createTodo: (formData: any) => AppThunk;\n}\ninterface EnhancedBasicCreateTodoFormProps {\n  createTodo: (formData: any) => void;\n}\n\nexport interface EnhancedBasicCreateTodoFormValues {\n  task: string;\n  description: string;\n}\n\nconst EnhancedBasicCreateTodoForm = withFormik<\n  EnhancedBasicCreateTodoFormProps,\n  EnhancedBasicCreateTodoFormValues\n>({\n  mapPropsToValues: (props) => ({\n    task: '',\n    description: '',\n  }),\n  validationSchema: Yup.object().shape({\n    task: Yup.string()\n      .required('Task is required!')\n      .max(30, 'Task cannot be more than 30 characters!'),\n    description: Yup.string()\n      .required('Todo description is required!')\n      .max(300, 'Task cannot be more than 300 characters!'),\n    // isEvent: Yup.boolean().notRequired(),\n    // isCompleted: Yup.boolean().notRequired(),\n    // dateOfEvent: Yup.date().notRequired(),\n    // dateOfCompletion: Yup.date().notRequired(),\n  }),\n  handleSubmit: (values, { setSubmitting, resetForm, props }) => {\n    const { createTodo } = props;\n\n    // if (todo) {\n    //   updateTodo(values);\n    // } else {\n    createTodo(values);\n    // }\n\n    // login(formData);\n\n    console.log(values);\n    setSubmitting(false);\n    resetForm();\n  },\n  displayName: 'BasicCreateTodoForm',\n})(BasicCreateTodoForm);\n\nexport default connect<null, IDispatchProps>(null, { createTodo })(\n  EnhancedBasicCreateTodoForm\n);\n","/Users/varun/website2020/todolist-frontend/src/views/Todos/BasicCreateTodo/BasicCreateTodoForm.tsx",["196","197"],"import { FormControl, TextField, Button } from '@material-ui/core';\nimport { FormikProps } from 'formik';\nimport React from 'react';\nimport {\n  RootStateOrAny,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n} from 'react-redux';\nimport { EnhancedBasicCreateTodoFormValues } from './EnhancedBasicCreateTodoForm';\ninterface BasicCreateTodoFormProps {}\n\nexport const BasicCreateTodoForm: React.FC<\n  BasicCreateTodoFormProps & FormikProps<EnhancedBasicCreateTodoFormValues>\n> = (props) => {\n  const dispatch = useDispatch();\n\n  const debug = false;\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    handleBlur,\n    handleChange,\n  } = props;\n  const {\n    todo: { loading },\n  } = useSelector((state: RootStateOrAny) => {\n    return {\n      todo: state.todo,\n    };\n  }, shallowEqual);\n  return (\n    <>\n      <div style={{ paddingTop: '0.5rem' }}>\n        <h1>TO-DO:</h1>\n\n        <form onSubmit={handleSubmit}>\n          <FormControl style={{ width: '100%' }}>\n            <TextField\n              color='secondary'\n              variant='standard'\n              label='Task'\n              placeholder='Task'\n              name='task'\n              value={values.task}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={(errors.task && touched.task) || false}\n              helperText={errors.task && touched.task && errors.task}\n            />\n          </FormControl>\n          <FormControl style={{ width: '100%' }}>\n            <TextField\n              color='secondary'\n              variant='standard'\n              label='Description'\n              placeholder='Please add a task description'\n              name='description'\n              value={values.description}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={(errors.description && touched.description) || false}\n              helperText={\n                errors.description && touched.description && errors.description\n              }\n              multiline\n            />\n          </FormControl>\n\n          <Button\n            style={{\n              backgroundColor: '#48BAF8',\n              color: 'white',\n              marginTop: '1rem',\n            }}\n            variant='contained'\n            type='submit'\n          >\n            {loading ? 'Loading...' : 'Add new Todo'}\n          </Button>\n        </form>\n      </div>\n    </>\n  );\n};\n","/Users/varun/website2020/todolist-frontend/src/slices/todoSlice.ts",["198","199","200"],"/Users/varun/website2020/todolist-frontend/src/api/todoRequests.ts",[],"/Users/varun/website2020/todolist-frontend/src/views/Todos/CreateOrUpdateTodo/CreateOrUpdateTodo.tsx",["201","202","203"],"/Users/varun/website2020/todolist-frontend/src/views/Todos/CreateOrUpdateTodo/EnhancedCreateOrUpdateTodoForm.tsx",["204","205","206","207","208"],"/Users/varun/website2020/todolist-frontend/src/views/Todos/CreateOrUpdateTodo/CreateOrUpdateTodoForm.tsx",["209"],{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","replacedBy":"213"},{"ruleId":"214","severity":1,"message":"215","line":1,"column":17,"nodeType":"216","messageId":"217","endLine":1,"endColumn":26},{"ruleId":"214","severity":1,"message":"218","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":12},{"ruleId":"214","severity":1,"message":"219","line":10,"column":10,"nodeType":"216","messageId":"217","endLine":10,"endColumn":18},{"ruleId":"214","severity":1,"message":"220","line":11,"column":8,"nodeType":"216","messageId":"217","endLine":11,"endColumn":20},{"ruleId":"214","severity":1,"message":"221","line":12,"column":10,"nodeType":"216","messageId":"217","endLine":12,"endColumn":15},{"ruleId":"214","severity":1,"message":"222","line":14,"column":27,"nodeType":"216","messageId":"217","endLine":14,"endColumn":35},{"ruleId":"214","severity":1,"message":"223","line":15,"column":10,"nodeType":"216","messageId":"217","endLine":15,"endColumn":15},{"ruleId":"214","severity":1,"message":"224","line":16,"column":10,"nodeType":"216","messageId":"217","endLine":16,"endColumn":18},{"ruleId":"214","severity":1,"message":"225","line":17,"column":10,"nodeType":"216","messageId":"217","endLine":17,"endColumn":23},{"ruleId":"214","severity":1,"message":"226","line":18,"column":10,"nodeType":"216","messageId":"217","endLine":18,"endColumn":19},{"ruleId":"214","severity":1,"message":"226","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":19},{"ruleId":"214","severity":1,"message":"225","line":3,"column":34,"nodeType":"216","messageId":"217","endLine":3,"endColumn":47},{"ruleId":"227","severity":1,"message":"228","line":4,"column":22,"nodeType":"229","messageId":"230","endLine":4,"endColumn":29},{"ruleId":"231","severity":1,"message":"232","line":11,"column":40,"nodeType":"233","messageId":"234","endLine":11,"endColumn":42},{"ruleId":"214","severity":1,"message":"235","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":23},{"ruleId":"231","severity":1,"message":"232","line":7,"column":45,"nodeType":"233","messageId":"234","endLine":7,"endColumn":47},{"ruleId":"231","severity":1,"message":"232","line":6,"column":51,"nodeType":"233","messageId":"234","endLine":6,"endColumn":53},{"ruleId":"214","severity":1,"message":"236","line":1,"column":27,"nodeType":"216","messageId":"217","endLine":1,"endColumn":37},{"ruleId":"214","severity":1,"message":"237","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":22},{"ruleId":"214","severity":1,"message":"238","line":15,"column":3,"nodeType":"216","messageId":"217","endLine":15,"endColumn":16},{"ruleId":"214","severity":1,"message":"239","line":30,"column":9,"nodeType":"216","messageId":"217","endLine":30,"endColumn":17},{"ruleId":"214","severity":1,"message":"240","line":32,"column":9,"nodeType":"216","messageId":"217","endLine":32,"endColumn":14},{"ruleId":"214","severity":1,"message":"239","line":30,"column":9,"nodeType":"216","messageId":"217","endLine":30,"endColumn":17},{"ruleId":"214","severity":1,"message":"240","line":32,"column":9,"nodeType":"216","messageId":"217","endLine":32,"endColumn":14},{"ruleId":"214","severity":1,"message":"237","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":22},{"ruleId":"214","severity":1,"message":"241","line":6,"column":8,"nodeType":"216","messageId":"217","endLine":6,"endColumn":18},{"ruleId":"214","severity":1,"message":"242","line":57,"column":9,"nodeType":"216","messageId":"217","endLine":57,"endColumn":16},{"ruleId":"243","severity":1,"message":"244","line":83,"column":6,"nodeType":"245","endLine":83,"endColumn":23,"suggestions":"246"},{"ruleId":"214","severity":1,"message":"247","line":2,"column":27,"nodeType":"216","messageId":"217","endLine":2,"endColumn":37},{"ruleId":"214","severity":1,"message":"248","line":11,"column":3,"nodeType":"216","messageId":"217","endLine":11,"endColumn":15},{"ruleId":"231","severity":1,"message":"232","line":34,"column":45,"nodeType":"233","messageId":"234","endLine":34,"endColumn":47},{"ruleId":"243","severity":1,"message":"249","line":46,"column":6,"nodeType":"245","endLine":46,"endColumn":8,"suggestions":"250"},{"ruleId":"243","severity":1,"message":"249","line":49,"column":6,"nodeType":"245","endLine":49,"endColumn":45,"suggestions":"251"},{"ruleId":"231","severity":1,"message":"232","line":15,"column":47,"nodeType":"233","messageId":"234","endLine":15,"endColumn":49},{"ruleId":"214","severity":1,"message":"237","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":22},{"ruleId":"214","severity":1,"message":"252","line":2,"column":19,"nodeType":"216","messageId":"217","endLine":2,"endColumn":33},{"ruleId":"214","severity":1,"message":"253","line":3,"column":22,"nodeType":"216","messageId":"217","endLine":3,"endColumn":32},{"ruleId":"214","severity":1,"message":"254","line":9,"column":3,"nodeType":"216","messageId":"217","endLine":9,"endColumn":20},{"ruleId":"214","severity":1,"message":"255","line":10,"column":3,"nodeType":"216","messageId":"217","endLine":10,"endColumn":23},{"ruleId":"214","severity":1,"message":"239","line":16,"column":9,"nodeType":"216","messageId":"217","endLine":16,"endColumn":17},{"ruleId":"214","severity":1,"message":"240","line":18,"column":9,"nodeType":"216","messageId":"217","endLine":18,"endColumn":14},{"ruleId":"214","severity":1,"message":"225","line":1,"column":23,"nodeType":"216","messageId":"217","endLine":1,"endColumn":36},{"ruleId":"214","severity":1,"message":"256","line":2,"column":10,"nodeType":"216","messageId":"217","endLine":2,"endColumn":18},{"ruleId":"214","severity":1,"message":"257","line":3,"column":10,"nodeType":"216","messageId":"217","endLine":3,"endColumn":22},{"ruleId":"231","severity":1,"message":"232","line":18,"column":71,"nodeType":"233","messageId":"234","endLine":18,"endColumn":73},{"ruleId":"243","severity":1,"message":"258","line":26,"column":6,"nodeType":"245","endLine":26,"endColumn":8,"suggestions":"259"},{"ruleId":"243","severity":1,"message":"249","line":38,"column":6,"nodeType":"245","endLine":38,"endColumn":48,"suggestions":"260"},{"ruleId":"214","severity":1,"message":"237","line":1,"column":10,"nodeType":"216","messageId":"217","endLine":1,"endColumn":22},{"ruleId":"214","severity":1,"message":"252","line":2,"column":19,"nodeType":"216","messageId":"217","endLine":2,"endColumn":33},{"ruleId":"214","severity":1,"message":"254","line":9,"column":3,"nodeType":"216","messageId":"217","endLine":9,"endColumn":20},{"ruleId":"214","severity":1,"message":"255","line":10,"column":3,"nodeType":"216","messageId":"217","endLine":10,"endColumn":23},{"ruleId":"214","severity":1,"message":"261","line":70,"column":19,"nodeType":"216","messageId":"217","endLine":70,"endColumn":29},{"ruleId":"214","severity":1,"message":"240","line":27,"column":9,"nodeType":"216","messageId":"217","endLine":27,"endColumn":14},"no-native-reassign",["262"],"no-negated-in-lhs",["263"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'loadUser' is defined but never used.","'setAuthToken' is defined but never used.","'Alert' is defined but never used.","'REGISTER' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'ThunkDispatch' is defined but never used.","'AnyAction' is defined but never used.","@typescript-eslint/consistent-type-assertions","Use 'as any' instead of '<any>'.","TSTypeAssertion","as","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'FormContainer' is defined but never used.","'ReactChild' is defined but never used.","'FormikValues' is defined but never used.","'NAME_REQUIRED' is defined but never used.","'dispatch' is assigned a value but never used.","'debug' is assigned a value but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["264"],"'RouteProps' is defined but never used.","'ListItemIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["265"],["266"],"'RootStateOrAny' is defined but never used.","'updateTodo' is defined but never used.","'PASSWORD_REQUIRED' is defined but never used.","'PASSWORD_SHORT_ERROR' is defined but never used.","'Dispatch' is defined but never used.","'DispatchProp' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["267"],["268"],"'createTodo' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"279","text":"280"},"Update the dependencies array to be: [dispatch]",{"range":"281","text":"282"},"Update the dependencies array to be: [createdTodo, updatedTodo, deletedTodo, dispatch]",{"range":"283","text":"284"},"Update the dependencies array to be: [dispatch, id]",{"range":"285","text":"286"},"Update the dependencies array to be: [id, createTodo, updatedTodo, deletedTodo, dispatch]",{"range":"287","text":"288"},[2268,2285],"[history, isAuthenticated]",[1224,1226],"[dispatch]",[1283,1322],"[createdTodo, updatedTodo, deletedTodo, dispatch]",[901,903],"[dispatch, id]",[1176,1218],"[id, createTodo, updatedTodo, deletedTodo, dispatch]"]