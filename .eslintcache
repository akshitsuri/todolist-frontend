[{"/Users/varun/website2020/todolist-frontend/src/index.tsx":"1","/Users/varun/website2020/todolist-frontend/src/reportWebVitals.ts":"2","/Users/varun/website2020/todolist-frontend/src/App.tsx":"3","/Users/varun/website2020/todolist-frontend/src/theme.ts":"4","/Users/varun/website2020/todolist-frontend/src/store.ts":"5","/Users/varun/website2020/todolist-frontend/src/slices/index.ts":"6","/Users/varun/website2020/todolist-frontend/src/utils/setAuthToken.ts":"7","/Users/varun/website2020/todolist-frontend/src/slices/authSlice.ts":"8","/Users/varun/website2020/todolist-frontend/src/slices/alertSlice.ts":"9","/Users/varun/website2020/todolist-frontend/src/api/api.ts":"10","/Users/varun/website2020/todolist-frontend/src/api/authRequests.ts":"11","/Users/varun/website2020/todolist-frontend/src/constants/routes.ts":"12","/Users/varun/website2020/todolist-frontend/src/components/Alert.tsx":"13","/Users/varun/website2020/todolist-frontend/src/views/auth/Login/Login.tsx":"14","/Users/varun/website2020/todolist-frontend/src/views/auth/Register/Register.tsx":"15","/Users/varun/website2020/todolist-frontend/src/assets/jss/Alerts.tsx":"16","/Users/varun/website2020/todolist-frontend/src/components/FormContainer.tsx":"17","/Users/varun/website2020/todolist-frontend/src/assets/jss/FormContainer.tsx":"18","/Users/varun/website2020/todolist-frontend/src/views/auth/Register/EnhancedRegisterForm.tsx":"19","/Users/varun/website2020/todolist-frontend/src/views/auth/Register/RegisterForm.tsx":"20","/Users/varun/website2020/todolist-frontend/src/constants/messages/formMessages.ts":"21","/Users/varun/website2020/todolist-frontend/src/views/auth/Login/LoginForm.tsx":"22","/Users/varun/website2020/todolist-frontend/src/views/auth/Login/EnhancedLoginForm.tsx":"23","/Users/varun/website2020/todolist-frontend/src/views/auth/MainForm.tsx":"24","/Users/varun/website2020/todolist-frontend/src/components/PrivateRoute.tsx":"25","/Users/varun/website2020/todolist-frontend/src/views/Todos/Todos.tsx":"26","/Users/varun/website2020/todolist-frontend/src/components/Loader/Loader.tsx":"27","/Users/varun/website2020/todolist-frontend/src/views/Todos/BasicCreateTodo/EnhancedBasicCreateTodoForm.tsx":"28","/Users/varun/website2020/todolist-frontend/src/views/Todos/BasicCreateTodo/BasicCreateTodoForm.tsx":"29","/Users/varun/website2020/todolist-frontend/src/slices/todoSlice.ts":"30","/Users/varun/website2020/todolist-frontend/src/api/todoRequests.ts":"31"},{"size":500,"mtime":1608550335387,"results":"32","hashOfConfig":"33"},{"size":425,"mtime":1608550335391,"results":"34","hashOfConfig":"33"},{"size":1615,"mtime":1608733010188,"results":"35","hashOfConfig":"33"},{"size":373,"mtime":1608645669004,"results":"36","hashOfConfig":"33"},{"size":1091,"mtime":1608648277781,"results":"37","hashOfConfig":"33"},{"size":354,"mtime":1608734630779,"results":"38","hashOfConfig":"33"},{"size":423,"mtime":1608554998079,"results":"39","hashOfConfig":"33"},{"size":5167,"mtime":1608732902489,"results":"40","hashOfConfig":"33"},{"size":782,"mtime":1608553586634,"results":"41","hashOfConfig":"33"},{"size":255,"mtime":1608552377671,"results":"42","hashOfConfig":"33"},{"size":1576,"mtime":1608552674417,"results":"43","hashOfConfig":"33"},{"size":353,"mtime":1608651985929,"results":"44","hashOfConfig":"33"},{"size":1062,"mtime":1608559439855,"results":"45","hashOfConfig":"33"},{"size":261,"mtime":1608646632890,"results":"46","hashOfConfig":"33"},{"size":239,"mtime":1608653133229,"results":"47","hashOfConfig":"33"},{"size":148,"mtime":1608559439854,"results":"48","hashOfConfig":"33"},{"size":1164,"mtime":1608733107110,"results":"49","hashOfConfig":"33"},{"size":386,"mtime":1608569336567,"results":"50","hashOfConfig":"33"},{"size":2034,"mtime":1608653452232,"results":"51","hashOfConfig":"33"},{"size":6633,"mtime":1608653035146,"results":"52","hashOfConfig":"33"},{"size":1050,"mtime":1608559439860,"results":"53","hashOfConfig":"33"},{"size":3627,"mtime":1608655100113,"results":"54","hashOfConfig":"33"},{"size":1253,"mtime":1608655176223,"results":"55","hashOfConfig":"33"},{"size":3042,"mtime":1608732383167,"results":"56","hashOfConfig":"33"},{"size":883,"mtime":1608732983558,"results":"57","hashOfConfig":"33"},{"size":4434,"mtime":1608737339692,"results":"58","hashOfConfig":"33"},{"size":939,"mtime":1608555873245,"results":"59","hashOfConfig":"33"},{"size":1838,"mtime":1608735222666,"results":"60","hashOfConfig":"33"},{"size":2416,"mtime":1608734724575,"results":"61","hashOfConfig":"33"},{"size":3362,"mtime":1608736196395,"results":"62","hashOfConfig":"33"},{"size":875,"mtime":1608558005616,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1vk93wx",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"66"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"66"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"66"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"66"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/varun/website2020/todolist-frontend/src/index.tsx",[],["138","139"],"/Users/varun/website2020/todolist-frontend/src/reportWebVitals.ts",[],"/Users/varun/website2020/todolist-frontend/src/App.tsx",["140","141","142","143","144","145","146","147","148","149"],"/Users/varun/website2020/todolist-frontend/src/theme.ts",[],"/Users/varun/website2020/todolist-frontend/src/store.ts",[],"/Users/varun/website2020/todolist-frontend/src/slices/index.ts",[],"/Users/varun/website2020/todolist-frontend/src/utils/setAuthToken.ts",[],"/Users/varun/website2020/todolist-frontend/src/slices/authSlice.ts",["150","151"],"/Users/varun/website2020/todolist-frontend/src/slices/alertSlice.ts",["152"],"import { createSlice } from '@reduxjs/toolkit';\nimport { v4 as uuid } from 'uuid';\n\nconst initialState = <any>[];\n\nconst alertSlice = createSlice({\n  name: 'alert',\n  initialState,\n  reducers: {\n    setAlertInReducer(state, action) {\n      return [...state, action.payload];\n    },\n    removeAlertInReducer(state, action) {\n      return state.filter((alert: any) => alert.id !== action.payload);\n    },\n  },\n});\n\nexport const { setAlertInReducer, removeAlertInReducer } = alertSlice.actions;\n\nexport default alertSlice.reducer;\n\n// Thunk\nexport const setAlert = (msg: string, alertType: string) => async (\n  dispatch: any\n) => {\n  const id = uuid();\n  dispatch(setAlertInReducer({ msg, alertType, id }));\n\n  setTimeout(() => {\n    dispatch(removeAlertInReducer(id));\n  }, 4000);\n};\n","/Users/varun/website2020/todolist-frontend/src/api/api.ts",[],"/Users/varun/website2020/todolist-frontend/src/api/authRequests.ts",[],"/Users/varun/website2020/todolist-frontend/src/constants/routes.ts",[],"/Users/varun/website2020/todolist-frontend/src/components/Alert.tsx",["153"],"import React from 'react';\nimport { useSelector, shallowEqual, RootStateOrAny } from 'react-redux';\nimport { Snackbar, makeStyles, Slide } from '@material-ui/core';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport AlertStyles from '../assets/jss/Alerts';\n\nconst useStyles = makeStyles(AlertStyles);\n\ninterface AlertProps {}\n\nconst MyAlert: React.FC<AlertProps> = ({}) => {\n  const { alerts } = useSelector((state: RootStateOrAny) => {\n    return {\n      alerts: state.alert,\n    };\n  }, shallowEqual);\n\n  const classes = useStyles();\n\n  return (\n    alerts !== null &&\n    alerts.length > 0 &&\n    alerts.map((alert: any) => (\n      <Snackbar\n        key={alert.id}\n        className={classes.root}\n        TransitionComponent={Slide}\n        open={alert.msg.length > 0 ? true : false}\n        anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n      >\n        <Alert style={{ width: '100%' }} severity={alert.alertType}>\n          <AlertTitle>{alert.msg}</AlertTitle>\n        </Alert>\n      </Snackbar>\n    ))\n  );\n};\n\nexport default MyAlert;\n","/Users/varun/website2020/todolist-frontend/src/views/auth/Login/Login.tsx",["154","155"],"import React from 'react';\nimport { FormContainer } from '../../../components/FormContainer';\nimport EnhancedLoginForm from './EnhancedLoginForm';\n\ninterface LoginProps {}\n\nexport const Login: React.FC<LoginProps> = ({}) => {\n  return <EnhancedLoginForm />;\n};\n","/Users/varun/website2020/todolist-frontend/src/views/auth/Register/Register.tsx",["156"],"import React from 'react';\nimport EnhancedRegisterForm from './EnhancedRegisterForm';\n\ninterface RegisterProps {}\n\nexport const Register: React.FC<RegisterProps> = ({}) => {\n  return (\n    <>\n      <EnhancedRegisterForm />\n    </>\n  );\n};\n","/Users/varun/website2020/todolist-frontend/src/assets/jss/Alerts.tsx",[],"/Users/varun/website2020/todolist-frontend/src/components/FormContainer.tsx",["157"],"/Users/varun/website2020/todolist-frontend/src/assets/jss/FormContainer.tsx",[],"/Users/varun/website2020/todolist-frontend/src/views/auth/Register/EnhancedRegisterForm.tsx",["158","159"],"import { FormikValues, withFormik } from 'formik';\nimport { connect } from 'react-redux';\nimport { register } from '../../../slices/authSlice';\nimport { RegisterForm } from './RegisterForm';\nimport * as Yup from 'yup';\n\n//constants\nimport {\n  EMAIL_INVALID_ERROR,\n  EMAIL_NOT_LONG_ERROR,\n  EMAIL_REQUIRED,\n  PASSWORD_REQUIRED,\n  PASSWORD_SHORT_ERROR,\n  CONFIRM_PASSWORD_REQUIRED,\n  NAME_REQUIRED,\n  PASSWORDS_MATCH_ERROR,\n} from '../../../constants/messages/formMessages';\nimport { AppThunk } from '../../../store';\ninterface IDispatchProps {\n  register: (formData: any) => AppThunk;\n}\ninterface EnhancedRegisterFormProps {\n  register: (formData: any) => void;\n}\nexport interface EnhancedRegisterFormValues {\n  firstName: string;\n  lastName: string;\n  email: string;\n  password: string;\n  confirmPassword: string;\n}\n\nconst EnhancedRegistrationForm = withFormik<\n  EnhancedRegisterFormProps,\n  EnhancedRegisterFormValues\n>({\n  mapPropsToValues: () => ({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n  }),\n  validationSchema: Yup.object().shape({\n    firstName: Yup.string().required('First name is required!'),\n    lastName: Yup.string().required('Last name is required!'),\n    email: Yup.string()\n      .min(3, EMAIL_NOT_LONG_ERROR)\n      .max(255)\n      .email(EMAIL_INVALID_ERROR)\n      .required(EMAIL_REQUIRED),\n\n    password: Yup.string()\n      .required(PASSWORD_REQUIRED)\n      .min(6, PASSWORD_SHORT_ERROR),\n\n    confirmPassword: Yup.string()\n      .required(CONFIRM_PASSWORD_REQUIRED)\n      .min(6, PASSWORD_SHORT_ERROR)\n      .oneOf([Yup.ref('password')], PASSWORDS_MATCH_ERROR),\n  }),\n  handleSubmit: (values, { setSubmitting, props }) => {\n    const { register } = props;\n    register({\n      name: values.firstName + ' ' + values.lastName,\n      ...values,\n    });\n    // console.log(values);\n\n    setSubmitting(false);\n  },\n  displayName: 'RegisterForm',\n})(RegisterForm);\n\nexport default connect<null, IDispatchProps>(null, { register })(\n  EnhancedRegistrationForm\n);\n","/Users/varun/website2020/todolist-frontend/src/views/auth/Register/RegisterForm.tsx",["160","161"],"import { FormikProps } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { EnhancedRegisterFormValues } from './EnhancedRegisterForm';\nimport {\n  FormControl,\n  makeStyles,\n  TextField,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport {\n  Visibility as VisibilityIcon,\n  VisibilityOff as VisibilityOffIcon,\n} from '@material-ui/icons';\n\nconst styles = (theme: any) => ({\n  multilineColor: {\n    color: 'white',\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\ninterface RegisterFormProps {}\n\nexport const RegisterForm: React.FC<\n  RegisterFormProps & FormikProps<EnhancedRegisterFormValues>\n> = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const debug = false;\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    handleBlur,\n    handleChange,\n  } = props;\n  const [view, setView] = useState(false);\n\n  const [view2, setView2] = useState(false);\n\n  return (\n    <>\n      <div style={{ textAlign: 'center', color: 'white', marginBottom: 12 }}>\n        <h2>Sign Up</h2>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <FormControl\n            style={{\n              // marginLeft: '0.5rem',\n              marginRight: '0.5rem',\n            }}\n          >\n            <TextField\n              color='secondary'\n              variant='outlined'\n              label='First Name*'\n              placeholder='First Name*'\n              InputProps={{\n                className: classes.multilineColor,\n              }}\n              name='firstName'\n              value={values.firstName}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={(errors.firstName && touched.firstName) || false}\n              helperText={\n                errors.firstName && touched.firstName && errors.firstName\n              }\n            />\n          </FormControl>\n          <FormControl\n            style={{\n              marginLeft: '0.5rem',\n              // marginRight: '0.5rem'\n            }}\n          >\n            <TextField\n              color='secondary'\n              variant='outlined'\n              label='Last Name*'\n              placeholder='Last Name*'\n              InputProps={{\n                className: classes.multilineColor,\n              }}\n              name='lastName'\n              value={values.lastName}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={(errors.lastName && touched.lastName) || false}\n              helperText={\n                errors.lastName && touched.lastName && errors.lastName\n              }\n            />\n          </FormControl>\n        </div>\n        <FormControl\n          style={{\n            // marginLeft: '0.5rem',\n            // marginRight: '0.5rem',\n            width: '100%',\n            marginTop: '1rem',\n            marginBottom: '1rem',\n          }}\n        >\n          <TextField\n            color='secondary'\n            variant='outlined'\n            label='Email*'\n            placeholder='Email*'\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n            name='email'\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={(errors.email && touched.email) || false}\n            helperText={errors.email && touched.email && errors.email}\n          />\n        </FormControl>\n        <FormControl\n          style={{\n            // marginLeft: '0.5rem',\n            // marginRight: '0.5rem',\n            // marginTop: '1rem',\n            marginBottom: '1rem',\n            width: '100%',\n          }}\n        >\n          <TextField\n            color='secondary'\n            variant='outlined'\n            label='Password*'\n            placeholder='Password*'\n            name='password'\n            type={view ? 'text' : 'password'}\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={(errors.password && touched.password) || false}\n            helperText={errors.password && touched.password && errors.password}\n            InputProps={{\n              className: classes.multilineColor,\n              endAdornment: (\n                <InputAdornment position='end'>\n                  {!view ? (\n                    <VisibilityIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView(!view)}\n                    />\n                  ) : (\n                    <VisibilityOffIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView(!view)}\n                    />\n                  )}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </FormControl>\n        <FormControl\n          style={{\n            // marginLeft: '0.5rem',\n            // marginRight: '0.5rem',\n            // marginTop: '1rem',\n            marginBottom: '1rem',\n            width: '100%',\n          }}\n        >\n          <TextField\n            color='secondary'\n            variant='outlined'\n            label='Confirm Password*'\n            placeholder='Confirm Password*'\n            name='confirmPassword'\n            type={view2 ? 'text' : 'password'}\n            value={values.confirmPassword}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={(errors.confirmPassword && touched.confirmPassword) || false}\n            helperText={\n              errors.confirmPassword &&\n              touched.confirmPassword &&\n              errors.confirmPassword\n            }\n            InputProps={{\n              className: classes.multilineColor,\n              endAdornment: (\n                <InputAdornment position='end'>\n                  {!view2 ? (\n                    <VisibilityIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView2(!view2)}\n                    />\n                  ) : (\n                    <VisibilityOffIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView2(!view2)}\n                    />\n                  )}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </FormControl>\n        <Button\n          fullWidth\n          style={{ color: 'white', fontSize: 20 }}\n          type='submit'\n          color='secondary'\n          variant='contained'\n        >\n          Get Started\n        </Button>\n      </form>\n    </>\n  );\n};\n","/Users/varun/website2020/todolist-frontend/src/constants/messages/formMessages.ts",[],"/Users/varun/website2020/todolist-frontend/src/views/auth/Login/LoginForm.tsx",["162","163"],"import { FormikProps } from 'formik';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector, RootStateOrAny } from 'react-redux';\nimport { EnhancedLoginFormValues } from './EnhancedLoginForm';\nimport {\n  FormControl,\n  makeStyles,\n  TextField,\n  InputAdornment,\n  Button,\n} from '@material-ui/core';\nimport {\n  Visibility as VisibilityIcon,\n  VisibilityOff as VisibilityOffIcon,\n} from '@material-ui/icons';\n\nconst styles = (theme: any) => ({\n  multilineColor: {\n    color: 'white',\n  },\n});\n\nconst useStyles = makeStyles(styles);\n\ninterface LoginFormProps {}\n\nexport const LoginForm: React.FC<\n  LoginFormProps & FormikProps<EnhancedLoginFormValues>\n> = (props) => {\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const debug = false;\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    handleBlur,\n    handleChange,\n  } = props;\n  const [view, setView] = useState(false);\n  const {\n    auth: { loading },\n  } = useSelector((state: RootStateOrAny) => {\n    return {\n      auth: state.auth,\n    };\n  });\n\n  return (\n    <>\n      <div style={{ textAlign: 'center', color: 'white', marginBottom: 12 }}>\n        <h2>Login</h2>\n      </div>\n      <form onSubmit={handleSubmit}>\n        <FormControl\n          style={{\n            // marginLeft: '0.5rem',\n            // marginRight: '0.5rem',\n            width: '100%',\n            marginTop: '1rem',\n            marginBottom: '1rem',\n          }}\n        >\n          <TextField\n            color='secondary'\n            variant='outlined'\n            label='Email*'\n            placeholder='Email*'\n            InputProps={{\n              className: classes.multilineColor,\n            }}\n            name='email'\n            value={values.email}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={(errors.email && touched.email) || false}\n            helperText={errors.email && touched.email && errors.email}\n          />\n        </FormControl>\n        <FormControl\n          style={{\n            // marginLeft: '0.5rem',\n            // marginRight: '0.5rem',\n            // marginTop: '1rem',\n            marginBottom: '1rem',\n            width: '100%',\n          }}\n        >\n          <TextField\n            color='secondary'\n            variant='outlined'\n            label='Password*'\n            placeholder='Password*'\n            name='password'\n            type={view ? 'text' : 'password'}\n            value={values.password}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            error={(errors.password && touched.password) || false}\n            helperText={errors.password && touched.password && errors.password}\n            InputProps={{\n              className: classes.multilineColor,\n              endAdornment: (\n                <InputAdornment position='end'>\n                  {!view ? (\n                    <VisibilityIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView(!view)}\n                    />\n                  ) : (\n                    <VisibilityOffIcon\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => setView(!view)}\n                    />\n                  )}\n                </InputAdornment>\n              ),\n            }}\n          />\n        </FormControl>\n\n        <Button\n          fullWidth\n          style={{ color: 'white', fontSize: 20 }}\n          type='submit'\n          color='secondary'\n          variant='contained'\n        >\n          {loading ? 'Loading...' : 'Login'}\n        </Button>\n      </form>\n    </>\n  );\n};\n","/Users/varun/website2020/todolist-frontend/src/views/auth/Login/EnhancedLoginForm.tsx",["164"],"import { FormikValues, withFormik } from 'formik';\nimport { connect } from 'react-redux';\nimport { login } from '../../../slices/authSlice';\nimport { LoginForm } from './LoginForm';\nimport * as Yup from 'yup';\n\n//constants\nimport {\n  PASSWORD_REQUIRED,\n  PASSWORD_SHORT_ERROR,\n} from '../../../constants/messages/formMessages';\nimport { AppThunk } from '../../../store';\n\ninterface IDispatchProps {\n  login: (formData: any) => AppThunk;\n}\ninterface EnhancedLoginFormProps {\n  login: (formDate: any) => void;\n}\nexport interface EnhancedLoginFormValues {\n  email: string;\n  password: string;\n}\n\nconst EnhancedLoginForm = withFormik<\n  EnhancedLoginFormProps,\n  EnhancedLoginFormValues\n>({\n  mapPropsToValues: () => ({\n    email: '',\n    password: '',\n  }),\n  validationSchema: Yup.object().shape({\n    email: Yup.string().required('Email is required!'),\n\n    password: Yup.string()\n      .required(PASSWORD_REQUIRED)\n      .min(6, PASSWORD_SHORT_ERROR),\n  }),\n  handleSubmit: (values, { setSubmitting, props }) => {\n    const { login } = props;\n\n    login(values);\n\n    // console.log(values);\n    setSubmitting(false);\n  },\n  displayName: 'LoginForm',\n})(LoginForm);\n\nexport default connect<null, IDispatchProps>(null, { login })(\n  EnhancedLoginForm\n);\n","/Users/varun/website2020/todolist-frontend/src/views/auth/MainForm.tsx",["165","166","167"],"/Users/varun/website2020/todolist-frontend/src/components/PrivateRoute.tsx",["168"],"/Users/varun/website2020/todolist-frontend/src/views/Todos/Todos.tsx",["169","170","171","172"],"/Users/varun/website2020/todolist-frontend/src/components/Loader/Loader.tsx",["173"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Backdrop } from '@material-ui/core';\nimport './Loader.css';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\ninterface LoaderProps {}\n\nexport const Loader: React.FC<LoaderProps> = ({}) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return (\n    <Backdrop className={classes.backdrop} open={open} onClick={handleClose}>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n        }}\n      >\n        <div className='spinner'>\n          <div className='cube1'></div>\n          <div className='cube2'></div>\n        </div>\n      </div>\n    </Backdrop>\n  );\n};\n\nLoader.propTypes = {};\n\nexport default Loader;\n","/Users/varun/website2020/todolist-frontend/src/views/Todos/BasicCreateTodo/EnhancedBasicCreateTodoForm.tsx",["174","175","176","177","178"],"import { FormikValues, withFormik } from 'formik';\nimport { connect, RootStateOrAny } from 'react-redux';\nimport { createTodo, updateTodo } from '../../../slices/todoSlice';\nimport { BasicCreateTodoForm } from './BasicCreateTodoForm';\nimport * as Yup from 'yup';\n\n//constants\nimport {\n  PASSWORD_REQUIRED,\n  PASSWORD_SHORT_ERROR,\n} from '../../../constants/messages/formMessages';\nimport { AppThunk } from '../../../store';\n\ninterface IDispatchProps {\n  createTodo: (formData: any) => AppThunk;\n}\ninterface EnhancedBasicCreateTodoFormProps {\n  createTodo: (formData: any) => void;\n}\n\nexport interface EnhancedBasicCreateTodoFormValues {\n  task: string;\n  description: string;\n}\n\nconst EnhancedBasicCreateTodoForm = withFormik<\n  EnhancedBasicCreateTodoFormProps,\n  EnhancedBasicCreateTodoFormValues\n>({\n  mapPropsToValues: (props) => ({\n    task: '',\n    description: '',\n  }),\n  validationSchema: Yup.object().shape({\n    task: Yup.string()\n      .required('Task is required!')\n      .max(30, 'Task cannot be more than 30 characters!'),\n    description: Yup.string()\n      .required('Todo description is required!')\n      .max(300, 'Task cannot be more than 300 characters!'),\n    // isEvent: Yup.boolean().notRequired(),\n    // isCompleted: Yup.boolean().notRequired(),\n    // dateOfEvent: Yup.date().notRequired(),\n    // dateOfCompletion: Yup.date().notRequired(),\n  }),\n  handleSubmit: (values, { setSubmitting, resetForm, props }) => {\n    const { createTodo } = props;\n\n    // if (todo) {\n    //   updateTodo(values);\n    // } else {\n    createTodo(values);\n    // }\n\n    // login(formData);\n\n    console.log(values);\n    setSubmitting(false);\n    resetForm();\n  },\n  displayName: 'BasicCreateTodoForm',\n})(BasicCreateTodoForm);\n\nexport default connect<null, IDispatchProps>(null, { createTodo })(\n  EnhancedBasicCreateTodoForm\n);\n","/Users/varun/website2020/todolist-frontend/src/views/Todos/BasicCreateTodo/BasicCreateTodoForm.tsx",["179","180"],"import { FormControl, TextField, Button } from '@material-ui/core';\nimport { FormikProps } from 'formik';\nimport React from 'react';\nimport {\n  RootStateOrAny,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n} from 'react-redux';\nimport { EnhancedBasicCreateTodoFormValues } from './EnhancedBasicCreateTodoForm';\ninterface BasicCreateTodoFormProps {}\n\nexport const BasicCreateTodoForm: React.FC<\n  BasicCreateTodoFormProps & FormikProps<EnhancedBasicCreateTodoFormValues>\n> = (props) => {\n  const dispatch = useDispatch();\n\n  const debug = false;\n  const {\n    values,\n    errors,\n    touched,\n    handleSubmit,\n    handleBlur,\n    handleChange,\n  } = props;\n  const {\n    todo: { loading },\n  } = useSelector((state: RootStateOrAny) => {\n    return {\n      todo: state.todo,\n    };\n  }, shallowEqual);\n  return (\n    <>\n      <div style={{ paddingTop: '0.5rem' }}>\n        <h1>TO-DO:</h1>\n\n        <form onSubmit={handleSubmit}>\n          <FormControl style={{ width: '100%' }}>\n            <TextField\n              color='secondary'\n              variant='standard'\n              label='Task'\n              placeholder='Task'\n              name='task'\n              value={values.task}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={(errors.task && touched.task) || false}\n              helperText={errors.task && touched.task && errors.task}\n            />\n          </FormControl>\n          <FormControl style={{ width: '100%' }}>\n            <TextField\n              color='secondary'\n              variant='standard'\n              label='Description'\n              placeholder='Please add a task description'\n              name='description'\n              value={values.description}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              error={(errors.description && touched.description) || false}\n              helperText={\n                errors.description && touched.description && errors.description\n              }\n              multiline\n            />\n          </FormControl>\n\n          <Button\n            style={{\n              backgroundColor: '#48BAF8',\n              color: 'white',\n              marginTop: '1rem',\n            }}\n            variant='contained'\n            type='submit'\n          >\n            {loading ? 'Loading...' : 'Add new Todo'}\n          </Button>\n        </form>\n      </div>\n    </>\n  );\n};\n","/Users/varun/website2020/todolist-frontend/src/slices/todoSlice.ts",["181","182","183"],"/Users/varun/website2020/todolist-frontend/src/api/todoRequests.ts",[],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":26},{"ruleId":"188","severity":1,"message":"192","line":2,"column":8,"nodeType":"190","messageId":"191","endLine":2,"endColumn":12},{"ruleId":"188","severity":1,"message":"193","line":10,"column":10,"nodeType":"190","messageId":"191","endLine":10,"endColumn":18},{"ruleId":"188","severity":1,"message":"194","line":11,"column":8,"nodeType":"190","messageId":"191","endLine":11,"endColumn":20},{"ruleId":"188","severity":1,"message":"195","line":12,"column":10,"nodeType":"190","messageId":"191","endLine":12,"endColumn":15},{"ruleId":"188","severity":1,"message":"196","line":14,"column":27,"nodeType":"190","messageId":"191","endLine":14,"endColumn":35},{"ruleId":"188","severity":1,"message":"197","line":15,"column":10,"nodeType":"190","messageId":"191","endLine":15,"endColumn":15},{"ruleId":"188","severity":1,"message":"198","line":16,"column":10,"nodeType":"190","messageId":"191","endLine":16,"endColumn":18},{"ruleId":"188","severity":1,"message":"199","line":17,"column":10,"nodeType":"190","messageId":"191","endLine":17,"endColumn":23},{"ruleId":"188","severity":1,"message":"200","line":18,"column":10,"nodeType":"190","messageId":"191","endLine":18,"endColumn":19},{"ruleId":"188","severity":1,"message":"200","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":19},{"ruleId":"188","severity":1,"message":"199","line":3,"column":34,"nodeType":"190","messageId":"191","endLine":3,"endColumn":47},{"ruleId":"201","severity":1,"message":"202","line":4,"column":22,"nodeType":"203","messageId":"204","endLine":4,"endColumn":29},{"ruleId":"205","severity":1,"message":"206","line":11,"column":40,"nodeType":"207","messageId":"208","endLine":11,"endColumn":42},{"ruleId":"188","severity":1,"message":"209","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":23},{"ruleId":"205","severity":1,"message":"206","line":7,"column":45,"nodeType":"207","messageId":"208","endLine":7,"endColumn":47},{"ruleId":"205","severity":1,"message":"206","line":6,"column":51,"nodeType":"207","messageId":"208","endLine":6,"endColumn":53},{"ruleId":"188","severity":1,"message":"210","line":1,"column":27,"nodeType":"190","messageId":"191","endLine":1,"endColumn":37},{"ruleId":"188","severity":1,"message":"211","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":22},{"ruleId":"188","severity":1,"message":"212","line":15,"column":3,"nodeType":"190","messageId":"191","endLine":15,"endColumn":16},{"ruleId":"188","severity":1,"message":"213","line":30,"column":9,"nodeType":"190","messageId":"191","endLine":30,"endColumn":17},{"ruleId":"188","severity":1,"message":"214","line":32,"column":9,"nodeType":"190","messageId":"191","endLine":32,"endColumn":14},{"ruleId":"188","severity":1,"message":"213","line":30,"column":9,"nodeType":"190","messageId":"191","endLine":30,"endColumn":17},{"ruleId":"188","severity":1,"message":"214","line":32,"column":9,"nodeType":"190","messageId":"191","endLine":32,"endColumn":14},{"ruleId":"188","severity":1,"message":"211","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":22},{"ruleId":"188","severity":1,"message":"215","line":6,"column":8,"nodeType":"190","messageId":"191","endLine":6,"endColumn":18},{"ruleId":"188","severity":1,"message":"216","line":57,"column":9,"nodeType":"190","messageId":"191","endLine":57,"endColumn":16},{"ruleId":"217","severity":1,"message":"218","line":83,"column":6,"nodeType":"219","endLine":83,"endColumn":23,"suggestions":"220"},{"ruleId":"188","severity":1,"message":"221","line":2,"column":27,"nodeType":"190","messageId":"191","endLine":2,"endColumn":37},{"ruleId":"188","severity":1,"message":"222","line":11,"column":3,"nodeType":"190","messageId":"191","endLine":11,"endColumn":15},{"ruleId":"205","severity":1,"message":"206","line":28,"column":45,"nodeType":"207","messageId":"208","endLine":28,"endColumn":47},{"ruleId":"217","severity":1,"message":"223","line":40,"column":6,"nodeType":"219","endLine":40,"endColumn":8,"suggestions":"224"},{"ruleId":"217","severity":1,"message":"223","line":43,"column":6,"nodeType":"219","endLine":43,"endColumn":45,"suggestions":"225"},{"ruleId":"205","severity":1,"message":"206","line":15,"column":47,"nodeType":"207","messageId":"208","endLine":15,"endColumn":49},{"ruleId":"188","severity":1,"message":"211","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":22},{"ruleId":"188","severity":1,"message":"226","line":2,"column":19,"nodeType":"190","messageId":"191","endLine":2,"endColumn":33},{"ruleId":"188","severity":1,"message":"227","line":3,"column":22,"nodeType":"190","messageId":"191","endLine":3,"endColumn":32},{"ruleId":"188","severity":1,"message":"228","line":9,"column":3,"nodeType":"190","messageId":"191","endLine":9,"endColumn":20},{"ruleId":"188","severity":1,"message":"229","line":10,"column":3,"nodeType":"190","messageId":"191","endLine":10,"endColumn":23},{"ruleId":"188","severity":1,"message":"213","line":16,"column":9,"nodeType":"190","messageId":"191","endLine":16,"endColumn":17},{"ruleId":"188","severity":1,"message":"214","line":18,"column":9,"nodeType":"190","messageId":"191","endLine":18,"endColumn":14},{"ruleId":"188","severity":1,"message":"199","line":1,"column":23,"nodeType":"190","messageId":"191","endLine":1,"endColumn":36},{"ruleId":"188","severity":1,"message":"230","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":18},{"ruleId":"188","severity":1,"message":"231","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":22},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'loadUser' is defined but never used.","'setAuthToken' is defined but never used.","'Alert' is defined but never used.","'REGISTER' is defined but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'ThunkDispatch' is defined but never used.","'AnyAction' is defined but never used.","@typescript-eslint/consistent-type-assertions","Use 'as any' instead of '<any>'.","TSTypeAssertion","as","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'FormContainer' is defined but never used.","'ReactChild' is defined but never used.","'FormikValues' is defined but never used.","'NAME_REQUIRED' is defined but never used.","'dispatch' is assigned a value but never used.","'debug' is assigned a value but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["234"],"'RouteProps' is defined but never used.","'ListItemIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["235"],["236"],"'RootStateOrAny' is defined but never used.","'updateTodo' is defined but never used.","'PASSWORD_REQUIRED' is defined but never used.","'PASSWORD_SHORT_ERROR' is defined but never used.","'Dispatch' is defined but never used.","'DispatchProp' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},"Update the dependencies array to be: [history, isAuthenticated]",{"range":"243","text":"244"},"Update the dependencies array to be: [dispatch]",{"range":"245","text":"246"},"Update the dependencies array to be: [createdTodo, updatedTodo, deletedTodo, dispatch]",{"range":"247","text":"248"},[2268,2285],"[history, isAuthenticated]",[1154,1156],"[dispatch]",[1213,1252],"[createdTodo, updatedTodo, deletedTodo, dispatch]"]